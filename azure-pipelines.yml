trigger:
  branches:
    include:
      - "*"
  tags:
    include:
      - v*
  paths:
      exclude:
        - README.adoc
        - LICENSE
jobs:
  - job: Linux
    pool:
      vmImage: ubuntu-latest

    steps:
    - script: gcc -std=c99 -pedantic -Wextra -O3 -DBUILD_LINUX=1 -o $BUILD_ARTIFACTSTAGINGDIRECTORY/patcher-linux-x64 source/build.c
      displayName: 'Build'

    - task: PublishBuildArtifacts@1
      displayName: Upload binary to artifacts
      inputs:
        artifactName: patcher
        pathToPublish: $(Build.ArtifactStagingDirectory)

  - job: Windows
    pool:
      vmImage: windows-latest

    steps:
    - script: |
        call "%ProgramFiles(x86)%\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" x64
        call "build_release.bat"
        move %SYSTEM_DEFAULTWORKINGDIRECTORY%\\build\\patcher.exe %BUILD_ARTIFACTSTAGINGDIRECTORY%\\patcher-windows-x64.exe
      displayName: Build

    - task: PublishBuildArtifacts@1
      displayName: Upload binary to artifacts
      inputs:
        artifactName: patcher
        pathToPublish: $(Build.ArtifactStagingDirectory)

  - job: Release
    displayName: Create GitHub Release
    pool:
      vmImage: ubuntu-latest

    dependsOn:
      - Windows
      - Linux

    steps:
    - task: DownloadBuildArtifacts@0
      inputs:
        downloadType: specific

    - bash: |
        export RELEASE_TAG=$(git describe)
        echo "##vso[task.setvariable variable=release_tag]$RELEASE_TAG"
      displayName: Set release tag
 
    - task: GitHubRelease@1
      condition: startswith(variables['Build.SourceBranch'], 'refs/tags/')
      displayName: Create GitHub release
      inputs:
        gitHubConnection: releases
        title: $(release_tag)
        tagPattern: ^v(\d+\.)+(\d+\.)+(\*|\d+)$
        assets: $(System.ArtifactsDirectory)/patcher/*
